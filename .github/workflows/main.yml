name: Deploy to Server

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

env:
  PIP_CACHE_DIR: "${{ github.workspace }}/.cache/pip"

jobs:
  sync:
    runs-on: self-hosted
    environment: default_env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            echo "ENV_FILE=${{ secrets.DEV_ENV_FILE }}" >> $GITHUB_ENV
            echo "PRIVATE_KEY=${{ secrets.DEV_PRIVATE_KEY }}" >> $GITHUB_ENV
            echo "USER_NAME=${{ secrets.DEV_BACK_USER_NAME }}" >> $GITHUB_ENV
            echo "SERVER_URL=${{ secrets.DEV_SERVER_URL }}" >> $GITHUB_ENV
            echo "SERVER_PORT=${{ secrets.DEV_SERVER_PORT }}" >> $GITHUB_ENV
            echo "BASE_DIR=${{ secrets.DEV_BASE_DIR }}" >> $GITHUB_ENV
            echo "NOT_PRUNE_DOCKER=${{ secrets.NOT_PRUNE_DOCKER }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "ENV_FILE=${{ secrets.MAIN_ENV_FILE }}" >> $GITHUB_ENV
            echo "PRIVATE_KEY=${{ secrets.MAIN_PRIVATE_KEY }}" >> $GITHUB_ENV
            echo "USER_NAME=${{ secrets.MAIN_BACK_USER_NAME }}" >> $GITHUB_ENV
            echo "SERVER_URL=${{ secrets.MAIN_SERVER_URL }}" >> $GITHUB_ENV
            echo "SERVER_PORT=${{ secrets.MAIN_SERVER_PORT }}" >> $GITHUB_ENV
            echo "BASE_DIR=${{ secrets.MAIN_BASE_DIR }}" >> $GITHUB_ENV
            echo "NOT_PRUNE_DOCKER=${{ secrets.NOT_PRUNE_DOCKER }}" >> $GITHUB_ENV
          else
            echo "Unknown branch: $GITHUB_REF"
            exit 1
          fi

      - name: Set up SSH
        run: |
          mkdir -p /tmp/ssh
          chmod 700 /tmp/ssh
          echo "$PRIVATE_KEY" > /tmp/ssh/private_key
          chmod 600 /tmp/ssh/private_key
          ssh-add /tmp/ssh/private_key

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git openssh-client rsync

      - name: Sync repo to host
        run: |
          cp "$ENV_FILE" .env
          echo "CI_COMMIT_BRANCH=${GITHUB_REF##*/}" >> .env
          ssh -A -o StrictHostKeyChecking=no $USER_NAME@$SERVER_URL -p $SERVER_PORT "mkdir -p $BASE_DIR"
          ssh -A -o StrictHostKeyChecking=no $USER_NAME@$SERVER_URL -p $SERVER_PORT "sudo apt-get update && sudo apt-get install -y rsync"
          rsync -zvrRth --progress --no-inc-recursive --exclude '.git' . $USER_NAME@$SERVER_URL:$BASE_DIR

  deploy:
      runs-on: self-hosted
      environment: default_env
      needs: sync
  
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
  
        - name: Launch containers
          run: |
            ssh -A -o StrictHostKeyChecking=no $USER_NAME@$SERVER_URL -p $SERVER_PORT "cd $BASE_DIR && docker compose --env-file .env up --build -d"
  
        - name: Docker system prune
          if: ${{ env.NOT_PRUNE_DOCKER != 'true' }}
          run: |
            ssh -A -o StrictHostKeyChecking=no $USER_NAME@$SERVER_URL -p $SERVER_PORT "docker system prune --all --force"
